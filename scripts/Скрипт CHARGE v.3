WITH Q1 AS (
SELECT T.CHRG_ID, T.GG_OP_CMT_SCN  FROM (SELECT LEAD(OB_ID) OVER(PARTITION BY GG_OP_CMT_SCN ORDER BY GG_SEQ_RBA) OB_ID_NEW,
               LEAD(GG_OP_CODE) OVER(PARTITION BY GG_OP_CMT_SCN ORDER BY GG_SEQ_RBA) GG_OP_CODE_NEW,
               C.CHRG_ID,
               C.GG_OP_CMT_SCN,
               C.OB_ID,
               C.GG_OP_CODE,
               C.GG_BEFORE_AFTER
          FROM $$STAGE_NUM.CHARGE_S C
         WHERE 1 = 1
    AND GG_OP_CMT_TIME > TO_DATE('$$MAX_GG_OP_CMT_TIME', 'DD.MM.YYYY HH24:MI:SS') - 1 / (24 * 60) * 30
    AND GG_OP_CMT_TIME < TO_DATE('$$MAX_GG_OP_CMT_TIME', 'DD.MM.YYYY HH24:MI:SS') + 1 / (24 * 60) * ($$DELTA_CMT_TIME)--180
    AND GG_OP_CMT_SCN > $$MAX_GG_OP_CMT_SCN
    AND GG_OP_CMT_SCN < $$APPLIED_LOW_POSITION
    AND GG_OP_CMT_SCN < $$MAX_CMT_SCN_CLNT
    AND  CHRG_ID > 0
    
    AND GG_OP_CODE IN ('U', 'P')
  ORDER BY GG_OP_CMT_SCN, GG_SEQ_RBA)  T 
 WHERE T.GG_OP_CODE_NEW = 'U'
   AND T.GG_OP_CODE = 'U'
   AND T.GG_BEFORE_AFTER = 'B'
   AND T.OB_ID IS NULL
   AND T.OB_ID_NEW IS NOT NULL
)
SELECT --+no_parallel(c)
    $$CHRG_ID AS CHRG_ID
    , $$CLNT_ID AS CLIENT_ID
    , $$CLNT_BAL_ID AS CLNT_BAL_ID
    ,CHARGE_DATE
    ,CHTYPE_ID
    ,CURR_ID
    ,SUMM_$
    ,VAT_$
    ,WOVAT_$
    , $$CRE_USER_ID AS CRE_USER_ID
    ,CRE_DATE
    ,SERV_ID
    , $$SUBS_ID AS SUBS_ID
    , $$TRPL_ID AS TRPL_ID
    , $$OB_ID AS OB_ID
    , $$INVD_ID AS INVD_ID
    , $$DEL_USER_ID AS DEL_USER_ID
    ,DEL_DATE
    ,CHRG_COMMENT
    ,TAX_RATE
    ,SUMM_WO_DIS_$
    , $$QUOTA_ID AS QUOTA_ID
    ,OWNER_CHRG_ID
    ,SSCH_ID
    ,GG_OP_CODE
    ,GG_OP_CMT_TIME
    ,GG_OP_CMT_SCN
    , max(D_IND) over (partition by CHRG_ID) as D_IND
    ,I_IND
  FROM
    (SELECT --+no_merge no_parallel(c)
      CHRG_ID AS CHRG_ID,
      MAX(CLNT_ID) KEEP (DENSE_RANK LAST ORDER BY GG_OP_CMT_SCN, GG_SEQ_RBA) AS CLNT_ID,
      MAX(CLNT_BAL_ID) KEEP (DENSE_RANK LAST ORDER BY GG_OP_CMT_SCN, GG_SEQ_RBA) AS CLNT_BAL_ID,
      CHARGE_DATE,
      MAX(CHTYPE_ID) KEEP (DENSE_RANK LAST ORDER BY GG_OP_CMT_SCN, GG_SEQ_RBA) AS CHTYPE_ID,
      MAX(CURR_ID) KEEP (DENSE_RANK LAST ORDER BY GG_OP_CMT_SCN, GG_SEQ_RBA) AS CURR_ID,
      MAX(SUMM_$) KEEP (DENSE_RANK LAST ORDER BY GG_OP_CMT_SCN, GG_SEQ_RBA) AS SUMM_$,
      MAX(VAT_$) KEEP (DENSE_RANK LAST ORDER BY GG_OP_CMT_SCN, GG_SEQ_RBA) AS VAT_$,
      MAX(WOVAT_$) KEEP (DENSE_RANK LAST ORDER BY GG_OP_CMT_SCN, GG_SEQ_RBA) AS WOVAT_$,
      MAX(CRE_USER_ID) KEEP (DENSE_RANK LAST ORDER BY GG_OP_CMT_SCN, GG_SEQ_RBA) AS CRE_USER_ID,
      MAX(CRE_DATE) KEEP (DENSE_RANK LAST ORDER BY GG_OP_CMT_SCN, GG_SEQ_RBA) AS CRE_DATE,
      MAX(SERV_ID) KEEP (DENSE_RANK LAST ORDER BY GG_OP_CMT_SCN, GG_SEQ_RBA) AS SERV_ID,
      MAX(SUBS_ID) KEEP (DENSE_RANK LAST ORDER BY GG_OP_CMT_SCN, GG_SEQ_RBA) AS SUBS_ID,
      MAX(TRPL_ID) KEEP (DENSE_RANK LAST ORDER BY GG_OP_CMT_SCN, GG_SEQ_RBA) AS TRPL_ID,
      MAX(OB_ID) KEEP (DENSE_RANK LAST ORDER BY GG_OP_CMT_SCN, GG_SEQ_RBA) AS OB_ID,
      MAX(INVD_ID) KEEP (DENSE_RANK LAST ORDER BY GG_OP_CMT_SCN, GG_SEQ_RBA) AS INVD_ID,
      MAX(DEL_USER_ID) KEEP (DENSE_RANK LAST ORDER BY GG_OP_CMT_SCN, GG_SEQ_RBA) AS DEL_USER_ID,
      MAX(DEL_DATE) KEEP (DENSE_RANK LAST ORDER BY GG_OP_CMT_SCN, GG_SEQ_RBA) AS DEL_DATE,
      MAX(CHRG_COMMENT) KEEP (DENSE_RANK LAST ORDER BY GG_OP_CMT_SCN, GG_SEQ_RBA) AS CHRG_COMMENT,
      MAX(TAX_RATE) KEEP (DENSE_RANK LAST ORDER BY GG_OP_CMT_SCN, GG_SEQ_RBA) AS TAX_RATE,
      MAX(SUMM_WO_DIS_$) KEEP (DENSE_RANK LAST ORDER BY GG_OP_CMT_SCN, GG_SEQ_RBA) AS SUMM_WO_DIS_$,
      MAX(QUOTA_ID) KEEP (DENSE_RANK LAST ORDER BY GG_OP_CMT_SCN, GG_SEQ_RBA) AS QUOTA_ID,
      MAX(OWNER_CHRG_ID) KEEP (DENSE_RANK LAST ORDER BY GG_OP_CMT_SCN, GG_SEQ_RBA) AS OWNER_CHRG_ID,
      MAX(SSCH_ID) KEEP (DENSE_RANK LAST ORDER BY GG_OP_CMT_SCN, GG_SEQ_RBA) AS SSCH_ID,
      MAX(DECODE (GG_OP_CODE, 'P', 1, 'D', 1, 0)) AS D_IND,
      MAX(DECODE (GG_OP_CODE, 'I', 1, 0)) AS I_IND,
      MAX(GG_OP_CODE) KEEP (DENSE_RANK LAST ORDER BY GG_OP_CMT_SCN, GG_SEQ_RBA) AS GG_OP_CODE,
      MAX(GG_OP_CMT_TIME) AS GG_OP_CMT_TIME,
      MAX(GG_OP_CMT_SCN) AS GG_OP_CMT_SCN
from
  (Select CHRG_ID, CLNT_ID, CLNT_BAL_ID, CHARGE_DATE, CHTYPE_ID, CURR_ID, SUMM_$, VAT_$, WOVAT_$, CRE_USER_ID, CRE_DATE, SERV_ID
      , SUBS_ID, TRPL_ID, OB_ID, INVD_ID, DEL_USER_ID, DEL_DATE, CHRG_COMMENT, TAX_RATE, SUMM_WO_DIS_$, QUOTA_ID, OWNER_CHRG_ID,SSCH_ID
      , GG_OP_CMT_TIME, GG_OP_CMT_SCN, GG_SEQ_RBA, GG_BEFORE_AFTER
      , case
          when lead(decode(gg_op_code, 'P', CHRG_ID))
           over(partition by GG_OP_CMT_SCN order by
              GG_SEQ_RBA) <> CHRG_ID or
          GG_BEFORE_AFTER = 'B' and gg_op_code = 'U' and lead(decode(gg_op_code, 'U', CHARGE_DATE))
               over(partition by GG_OP_CMT_SCN order by
                  GG_SEQ_RBA) <> CHARGE_DATE then
           'D'
          else
          GG_OP_CODE
          end GG_OP_CODE
  FROM $$STAGE_NUM.VW_CHARGE_S  c
  WHERE 1 = 1
    AND GG_OP_CMT_TIME > TO_DATE('$$MAX_GG_OP_CMT_TIME', 'DD.MM.YYYY HH24:MI:SS') - 1 / (24 * 60) * 30
    AND GG_OP_CMT_TIME < TO_DATE('$$MAX_GG_OP_CMT_TIME', 'DD.MM.YYYY HH24:MI:SS') + 1 / (24 * 60) * ($$DELTA_CMT_TIME)--180
    AND GG_OP_CMT_SCN > $$MAX_GG_OP_CMT_SCN
    and GG_OP_CMT_SCN < $$APPLIED_LOW_POSITION
    and GG_OP_CMT_SCN < $$MAX_CMT_SCN_CLNT
    AND  CHRG_ID > 0
    AND (C.CHRG_ID, C.GG_OP_CMT_SCN, GG_OP_CODE) NOT IN (SELECT Q1.CHRG_ID,Q1.GG_OP_CMT_SCN, 'U' FROM Q1)
    )
where   (GG_BEFORE_AFTER = 'A' OR GG_BEFORE_AFTER = 'B' AND GG_OP_CODE = 'D') 
  GROUP BY CHRG_ID, CHARGE_DATE ) c
order by 2
